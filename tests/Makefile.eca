# Normally this makefile shouldn't be called directly and we expect the output
# path to be on a certain location to fit together with the other OP-TEE
# gits and helper scripts.
ifeq ($O,)
$(error output path should be specified when calling this makefile)
endif

#include $(TA_DEV_KIT_DIR)/host_include/conf.mk

# By default we expect optee_client exported folder to be on a certain relative
# path, but if the client specifies the OPTEE_CLIENT_EXPORT then that path will
# be used instead.
TEEC_EXPORT ?= /dev/null

CC		= $(CROSS_COMPILE)gcc
CPP		= $(CROSS_COMPILE)cpp
CXX		= $(CROSS_COMPILE)g++
LD		= $(CROSS_COMPILE)ld
AR		= $(CROSS_COMPILE)ar
NM		= $(CROSS_COMPILE)nm
OBJCOPY		= $(CROSS_COMPILE)objcopy
OBJDUMP		= $(CROSS_COMPILE)objdump
READELF		= $(CROSS_COMPILE)readelf

binary = test_smaf
srcs := test_smaf.c
srcs += optee_invoke_sdp_ta.c

objs = $(patsubst %.c,$(O)/%.o, $(srcs))

CFLAGS += -I./
LDFLAGS += -lpthread

LDFLAGS += -Wl,-L$(O)
LDFLAGS += -Wl,-lsmaf

CFLAGS += -I$(TEEC_EXPORT)/include
LDFLAGS += -lteec -L$(TEEC_EXPORT)/lib


$(binary): $(objs)
	@echo '  LINK    $(O)/$@'
	$(q)$(CC) -o $(O)/$@ $+ $(LDFLAGS)

$(O)/%.o: $(CURDIR)/%.c
	mkdir -p $(O)
	@echo '  CC      $<'
	$(q)$(CC) $(CFLAGS) -c $< -o $@


.PHONY: clean
clean:
	@echo '  CLEAN $(O)'
	$(q)rm -f $(O)/$(binary)
	$(q)$(foreach obj,$(objs), rm -f $(obj))

